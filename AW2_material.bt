//------------------------------------------------
//--- 010 Editor v11.0.1 Binary Template
//
//      File: AW2_material.bt
//    Author: SilverEzredes
//   Version: November 23, 2023 - v1.1.3
//   Purpose: Editing of Alan Wake 2 .material files
//  Category: Northlight Engine
// File Mask: *material
//  ID Bytes: 
//   History: 
//------------------------------------------------

typedef struct {
    uint Magic;
    uint Version;
    uint MaterialParamCount <name="Material Param Count">;
} Header <name="Header">;

typedef struct {
    uint ParamNameLength;
    char ParamName[ParamNameLength];
    uint MaterialParamType;
    if (MaterialParamType == 0)
    {
        float R;   
    }
    else if (MaterialParamType == 1) //vec2
    {
        float R, G;
    }
    else if (MaterialParamType == 2) //vec3
    {
        float R, G, B;
    }
    else if (MaterialParamType == 3) //vec4
    {
        float R, G, B, A;
    }
    else if (MaterialParamType == 4)
    {
        uint unkInt;
    }
    else if (MaterialParamType == 5)
    {
        uint unkInt2;
    }
    else if (MaterialParamType == 6)
    {
        char TextureHash[8];
    }
    else if (MaterialParamType == 12) //bool
    {
        ubyte isEnabled;
    }
    else if (MaterialParamType == 17)
    {
        uint unkInt3, unkInt4;
    }
} MaterialParamEntry;

typedef struct {
    char TextureHash[8];
} TextureHashEntry;

typedef struct {
    MaterialParamEntry MaterialParam[header.MaterialParamCount] <optimize=false, bgcolor=0x039007>;
    
    uint Extra_MaterialParams <bgcolor=0xeb34a2>;
    if (Extra_MaterialParams == 0)
        {
            FSkip(4);
            uint TextureHashCount <bgcolor=0x343434>;
            TextureHashEntry Hash[TextureHashCount] <bgcolor=0x3434eb>;
        }
    else if (Extra_MaterialParams > 0) 
    {
        do 
        {
            MaterialParamEntry MaterialParam[Extra_MaterialParams] <optimize=false, bgcolor=0x039007>;
            uint EX_Extra_MaterialParams <bgcolor=0xeb34a2>;
            Extra_MaterialParams == EX_Extra_MaterialParams;
        } 
        while (EX_Extra_MaterialParams > 0);

        uint TextureHashCount <bgcolor=0x343434>;
        TextureHashEntry Hash[TextureHashCount] <bgcolor=0x3434eb>;
        uint TextureHashCount2 <bgcolor=0x343434>;
        TextureHashEntry Hash2[TextureHashCount2] <bgcolor=0x3434eb>;
    }
} MaterialParams <name="Material Parameters">;

typedef struct {
    uint MMTR_NameLength;
    char MasterMaterial[MMTR_NameLength];
    uint UNK4;
    uint UNK5;
    ushort Width;
    ushort Height;
} MasterMaterial <name="Master Material">;

typedef struct {
    Header header <bgcolor=0xf20014>;
    MaterialParams materialparams;
    MasterMaterial mastermaterial <bgcolor=0x3492eb>;
} AW2_Material;

AW2_Material AW2Mat <name="AW2 Material File">;